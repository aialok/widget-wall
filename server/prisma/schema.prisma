// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum IssueStatus {
  OPEN
  CLOSED
}

model Profile {
  id       String   @id @default(uuid())
  userId   String   @unique
  name     String
  imageUrl String   @db.Text
  email    String   @db.Text

  til           TIL[]
  issueTrackers IssueTracker[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Poll {
  id         String       @id @default(uuid())
  question   String
  options    PollOption[]
  createdAt  DateTime     @default(now())
  updatedAt  DateTime     @updatedAt
}

model PollOption {
  id         String   @id @default(uuid())
  pollId     String
  poll       Poll     @relation(fields: [pollId], references: [id], onDelete: Cascade)
  option     String
  votes      Int      @default(0)
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([pollId])
}

model TIL {
  id         String   @id @default(uuid())
  profileId  String
  profile    Profile  @relation(fields: [profileId], references: [id], onDelete: Cascade)
  content    String   @db.Text
  createdAt  DateTime @default(now())
  updatedAt  DateTime @updatedAt

  @@index([profileId])
}

model IssueTracker {
  id          String       @id @default(uuid())
  profileId   String
  profile     Profile      @relation(fields: [profileId], references: [id], onDelete: Cascade)
  issue       String       @db.Text
  status      IssueStatus  @default(OPEN)
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt

  @@index([profileId])
}
